// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.0
// source: proto/di.proto

package di

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{0}
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PageInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

//获取对应日志信息
type PropertyLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //使用了聚合函数及间隔的时候无效
	DeviceNames []string  `protobuf:"bytes,3,rep,name=deviceNames,proto3" json:"deviceNames,omitempty"` //设备名(不填获取产品下所有设备)
	ProductID   string    `protobuf:"bytes,4,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id (必填)
	DataID      string    `protobuf:"bytes,5,opt,name=dataID,proto3" json:"dataID,omitempty"`           //获取的具体标识符的数据(必填)
	TimeStart   int64     `protobuf:"varint,6,opt,name=timeStart,proto3" json:"timeStart,omitempty"`    //获取时间的开始(毫秒时间戳)
	TimeEnd     int64     `protobuf:"varint,7,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`        //时间的结束(毫秒时间戳)
	Interval    int64     `protobuf:"varint,8,opt,name=interval,proto3" json:"interval,omitempty"`      //间隔(单位毫秒) 如果这个值不为零值 则时间的开始和结束必须有效及聚合函数不应该为空
	ArgFunc     string    `protobuf:"bytes,9,opt,name=argFunc,proto3" json:"argFunc,omitempty"`         //聚合函数 avg:平均值 first:第一个参数 last:最后一个参数 count:总数 twa: 时间加权平均函数 参考:https://docs.taosdata.com/taos-sql/function
	//  /*
	//  FILL 语句指定某一窗口区间数据缺失的情况下的填充模式。填充模式包括以下几种：
	//    不进行填充：NONE（默认填充模式）。
	//    VALUE 填充：固定值填充，此时需要指定填充的数值。例如：FILL(VALUE, 1.23)。
	//    PREV 填充：使用前一个非 NULL 值填充数据。例如：FILL(PREV)。
	//    NULL 填充：使用 NULL 填充数据。例如：FILL(NULL)。
	//    LINEAR 填充：根据前后距离最近的非 NULL 值做线性插值填充。例如：FILL(LINEAR)。
	//    NEXT 填充：使用下一个非 NULL 值填充数据。例如：FILL(NEXT)。
	//  */
	Fill  string `protobuf:"bytes,10,opt,name=fill,proto3" json:"fill,omitempty"`    //填充模式 参考:https://docs.taosdata.com/taos-sql/distinguished/
	Order int32  `protobuf:"varint,11,opt,name=order,proto3" json:"order,omitempty"` //时间排序 0:aes(默认,从久到近排序) 1:desc(时间从近到久排序)
}

func (x *PropertyLogIndexReq) Reset() {
	*x = PropertyLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyLogIndexReq) ProtoMessage() {}

func (x *PropertyLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyLogIndexReq.ProtoReflect.Descriptor instead.
func (*PropertyLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{2}
}

func (x *PropertyLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *PropertyLogIndexReq) GetDeviceNames() []string {
	if x != nil {
		return x.DeviceNames
	}
	return nil
}

func (x *PropertyLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *PropertyLogIndexReq) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *PropertyLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *PropertyLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *PropertyLogIndexReq) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *PropertyLogIndexReq) GetArgFunc() string {
	if x != nil {
		return x.ArgFunc
	}
	return ""
}

func (x *PropertyLogIndexReq) GetFill() string {
	if x != nil {
		return x.Fill
	}
	return ""
}

func (x *PropertyLogIndexReq) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

//获取对应日志信息
type PropertyLatestIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceName string   `protobuf:"bytes,1,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名(必填)
	ProductID  string   `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id (必填)
	DataIDs    []string `protobuf:"bytes,3,rep,name=dataIDs,proto3" json:"dataIDs,omitempty"`       //获取的具体标识符的数据 如果不指定则获取所有属性数据,一个属性一条,如果没有获取到的不会返回值
}

func (x *PropertyLatestIndexReq) Reset() {
	*x = PropertyLatestIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyLatestIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyLatestIndexReq) ProtoMessage() {}

func (x *PropertyLatestIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyLatestIndexReq.ProtoReflect.Descriptor instead.
func (*PropertyLatestIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{3}
}

func (x *PropertyLatestIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *PropertyLatestIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *PropertyLatestIndexReq) GetDataIDs() []string {
	if x != nil {
		return x.DataIDs
	}
	return nil
}

//设备的日志数据
type PropertyIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳(毫秒时间戳)
	DataID    string `protobuf:"bytes,3,opt,name=dataID,proto3" json:"dataID,omitempty"`        //属性id
	Value     string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`          //获取到的值
}

func (x *PropertyIndex) Reset() {
	*x = PropertyIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyIndex) ProtoMessage() {}

func (x *PropertyIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyIndex.ProtoReflect.Descriptor instead.
func (*PropertyIndex) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{4}
}

func (x *PropertyIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PropertyIndex) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *PropertyIndex) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//获取对应日志信息
type PropertyIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64            `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*PropertyIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PropertyIndexResp) Reset() {
	*x = PropertyIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropertyIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropertyIndexResp) ProtoMessage() {}

func (x *PropertyIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropertyIndexResp.ProtoReflect.Descriptor instead.
func (*PropertyIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{5}
}

func (x *PropertyIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PropertyIndexResp) GetList() []*PropertyIndex {
	if x != nil {
		return x.List
	}
	return nil
}

//获取对应日志信息
type EventLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        *PageInfo `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`               //使用了聚合函数及间隔的时候无效
	ProductID   string    `protobuf:"bytes,2,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id (必填)
	DeviceNames []string  `protobuf:"bytes,3,rep,name=deviceNames,proto3" json:"deviceNames,omitempty"` //设备名(不填获取产品下所有设备)
	DataID      string    `protobuf:"bytes,4,opt,name=dataID,proto3" json:"dataID,omitempty"`           //获取的具体标识符的数据(必填)
	TimeStart   int64     `protobuf:"varint,5,opt,name=timeStart,proto3" json:"timeStart,omitempty"`    //获取时间的开始(毫秒时间戳)
	TimeEnd     int64     `protobuf:"varint,6,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`        //时间的结束(毫秒时间戳)
	Types       []string  `protobuf:"bytes,7,rep,name=types,proto3" json:"types,omitempty"`             //类型 事件类型: 信息:info  告警alert  故障:fault
}

func (x *EventLogIndexReq) Reset() {
	*x = EventLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLogIndexReq) ProtoMessage() {}

func (x *EventLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLogIndexReq.ProtoReflect.Descriptor instead.
func (*EventLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{6}
}

func (x *EventLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *EventLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *EventLogIndexReq) GetDeviceNames() []string {
	if x != nil {
		return x.DeviceNames
	}
	return nil
}

func (x *EventLogIndexReq) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *EventLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *EventLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *EventLogIndexReq) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

//设备的日志数据
type EventIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳(毫秒时间戳)
	Type      string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`            // 事件类型: 信息:info  告警alert  故障:fault
	DataID    string `protobuf:"bytes,3,opt,name=dataID,proto3" json:"dataID,omitempty"`        //属性id
	Params    string `protobuf:"bytes,4,opt,name=params,proto3" json:"params,omitempty"`        //获取到的值
}

func (x *EventIndex) Reset() {
	*x = EventIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventIndex) ProtoMessage() {}

func (x *EventIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventIndex.ProtoReflect.Descriptor instead.
func (*EventIndex) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{7}
}

func (x *EventIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EventIndex) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventIndex) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *EventIndex) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

//获取对应日志信息
type EventIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64         `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*EventIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *EventIndexResp) Reset() {
	*x = EventIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventIndexResp) ProtoMessage() {}

func (x *EventIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventIndexResp.ProtoReflect.Descriptor instead.
func (*EventIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{8}
}

func (x *EventIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *EventIndexResp) GetList() []*EventIndex {
	if x != nil {
		return x.List
	}
	return nil
}

//实时获取对应信息
type HubLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string    `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64     `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始(毫秒时间戳)
	TimeEnd    int64     `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束(毫秒时间戳)
	Page       *PageInfo `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`             //分页信息
	Actions    []string  `protobuf:"bytes,6,rep,name=actions,proto3" json:"actions,omitempty"`       //过滤操作类型 connected:上线 disconnected:下线  property:属性 event:事件 action:操作 thing:物模型提交的操作为匹配的日志
	Topics     []string  `protobuf:"bytes,7,rep,name=topics,proto3" json:"topics,omitempty"`         //过滤主题
	Content    string    `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`       //过滤内容
	RequestID  string    `protobuf:"bytes,9,opt,name=requestID,proto3" json:"requestID,omitempty"`   //过滤请求ID
}

func (x *HubLogIndexReq) Reset() {
	*x = HubLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HubLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HubLogIndexReq) ProtoMessage() {}

func (x *HubLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HubLogIndexReq.ProtoReflect.Descriptor instead.
func (*HubLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{9}
}

func (x *HubLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *HubLogIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *HubLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *HubLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *HubLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *HubLogIndexReq) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *HubLogIndexReq) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *HubLogIndexReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HubLogIndexReq) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

//实时获取对应信息
type HubLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*HubLogIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *HubLogIndexResp) Reset() {
	*x = HubLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HubLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HubLogIndexResp) ProtoMessage() {}

func (x *HubLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HubLogIndexResp.ProtoReflect.Descriptor instead.
func (*HubLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{10}
}

func (x *HubLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *HubLogIndexResp) GetList() []*HubLogIndex {
	if x != nil {
		return x.List
	}
	return nil
}

//设备的日志数据
type HubLogIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`   //发生时间戳(毫秒时间戳)
	Action     string `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`          //操作类型;connected:上线 disconnected:下线  property:属性 event:事件 action:操作 thing:物模型提交的操作为匹配的日志
	RequestID  string `protobuf:"bytes,3,opt,name=requestID,proto3" json:"requestID,omitempty"`    //请求ID
	TranceID   string `protobuf:"bytes,4,opt,name=tranceID,proto3" json:"tranceID,omitempty"`      //服务器端事务id
	Topic      string `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`            //主题
	Content    string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`        //具体内容
	ResultType int64  `protobuf:"varint,7,opt,name=resultType,proto3" json:"resultType,omitempty"` //请求结果状态
}

func (x *HubLogIndex) Reset() {
	*x = HubLogIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HubLogIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HubLogIndex) ProtoMessage() {}

func (x *HubLogIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HubLogIndex.ProtoReflect.Descriptor instead.
func (*HubLogIndex) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{11}
}

func (x *HubLogIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HubLogIndex) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *HubLogIndex) GetRequestID() string {
	if x != nil {
		return x.RequestID
	}
	return ""
}

func (x *HubLogIndex) GetTranceID() string {
	if x != nil {
		return x.TranceID
	}
	return ""
}

func (x *HubLogIndex) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *HubLogIndex) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *HubLogIndex) GetResultType() int64 {
	if x != nil {
		return x.ResultType
	}
	return 0
}

//获取sdk调试日志信息
type SdkLogIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID  string    `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`   //产品id
	DeviceName string    `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"` //设备名
	TimeStart  int64     `protobuf:"varint,3,opt,name=timeStart,proto3" json:"timeStart,omitempty"`  //获取时间的开始
	TimeEnd    int64     `protobuf:"varint,4,opt,name=timeEnd,proto3" json:"timeEnd,omitempty"`      //时间的结束
	LogLevel   int64     `protobuf:"varint,5,opt,name=logLevel,proto3" json:"logLevel,omitempty"`    //日志等级
	Page       *PageInfo `protobuf:"bytes,6,opt,name=page,proto3" json:"page,omitempty"`             //分页信息 只获取一个则不填
}

func (x *SdkLogIndexReq) Reset() {
	*x = SdkLogIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkLogIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkLogIndexReq) ProtoMessage() {}

func (x *SdkLogIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkLogIndexReq.ProtoReflect.Descriptor instead.
func (*SdkLogIndexReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{12}
}

func (x *SdkLogIndexReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SdkLogIndexReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SdkLogIndexReq) GetTimeStart() int64 {
	if x != nil {
		return x.TimeStart
	}
	return 0
}

func (x *SdkLogIndexReq) GetTimeEnd() int64 {
	if x != nil {
		return x.TimeEnd
	}
	return 0
}

func (x *SdkLogIndexReq) GetLogLevel() int64 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

func (x *SdkLogIndexReq) GetPage() *PageInfo {
	if x != nil {
		return x.Page
	}
	return nil
}

//sdk调试日志信息
type SdkLogIndexResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64          `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"` //总数
	List  []*SdkLogIndex `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SdkLogIndexResp) Reset() {
	*x = SdkLogIndexResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkLogIndexResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkLogIndexResp) ProtoMessage() {}

func (x *SdkLogIndexResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkLogIndexResp.ProtoReflect.Descriptor instead.
func (*SdkLogIndexResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{13}
}

func (x *SdkLogIndexResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SdkLogIndexResp) GetList() []*SdkLogIndex {
	if x != nil {
		return x.List
	}
	return nil
}

type SdkLogIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"` //发生时间戳(毫秒时间戳)
	Loglevel  int64  `protobuf:"varint,2,opt,name=loglevel,proto3" json:"loglevel,omitempty"`   //操作类型;显示相应的操作名称、API名称、服务的method
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`      //具体内容
}

func (x *SdkLogIndex) Reset() {
	*x = SdkLogIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SdkLogIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SdkLogIndex) ProtoMessage() {}

func (x *SdkLogIndex) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SdkLogIndex.ProtoReflect.Descriptor instead.
func (*SdkLogIndex) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{14}
}

func (x *SdkLogIndex) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SdkLogIndex) GetLoglevel() int64 {
	if x != nil {
		return x.Loglevel
	}
	return 0
}

func (x *SdkLogIndex) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SendActionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID   string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`     //产品id 获取产品id下的所有设备信息
	DeviceName  string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`   //设备名
	ActionID    string `protobuf:"bytes,3,opt,name=actionID,proto3" json:"actionID,omitempty"`       //产品数据模板中行为功能的标识符，由开发者自行根据设备的应用场景定义
	InputParams string `protobuf:"bytes,4,opt,name=inputParams,proto3" json:"inputParams,omitempty"` //输入参数
}

func (x *SendActionReq) Reset() {
	*x = SendActionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionReq) ProtoMessage() {}

func (x *SendActionReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionReq.ProtoReflect.Descriptor instead.
func (*SendActionReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{15}
}

func (x *SendActionReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendActionReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendActionReq) GetActionID() string {
	if x != nil {
		return x.ActionID
	}
	return ""
}

func (x *SendActionReq) GetInputParams() string {
	if x != nil {
		return x.InputParams
	}
	return ""
}

type SendActionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientToken  string `protobuf:"bytes,1,opt,name=clientToken,proto3" json:"clientToken,omitempty"`   //调用id
	OutputParams string `protobuf:"bytes,2,opt,name=outputParams,proto3" json:"outputParams,omitempty"` //输出参数 注意：此字段可能返回 null，表示取不到有效值。
	Status       string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`             //返回状态
	Code         int64  `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`                //设备返回状态码
}

func (x *SendActionResp) Reset() {
	*x = SendActionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendActionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendActionResp) ProtoMessage() {}

func (x *SendActionResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendActionResp.ProtoReflect.Descriptor instead.
func (*SendActionResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{16}
}

func (x *SendActionResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendActionResp) GetOutputParams() string {
	if x != nil {
		return x.OutputParams
	}
	return ""
}

func (x *SendActionResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendActionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

type SendPropertyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductID     string `protobuf:"bytes,1,opt,name=productID,proto3" json:"productID,omitempty"`          //产品id 获取产品id下的所有设备信息
	DeviceName    string `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`        //设备名
	Data          string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                    //属性数据, JSON格式字符串, 注意字段需要在物模型属性里定义
	DataTimestamp int64  `protobuf:"varint,4,opt,name=dataTimestamp,proto3" json:"dataTimestamp,omitempty"` //上报数据UNIX时间戳, 仅对Method:reported有效
	Method        string `protobuf:"bytes,5,opt,name=method,proto3" json:"method,omitempty"`                //请求类型 , 不填该参数或者 desired 表示下发属性给设备, reported 表示模拟设备上报属性
}

func (x *SendPropertyReq) Reset() {
	*x = SendPropertyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyReq) ProtoMessage() {}

func (x *SendPropertyReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyReq.ProtoReflect.Descriptor instead.
func (*SendPropertyReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{17}
}

func (x *SendPropertyReq) GetProductID() string {
	if x != nil {
		return x.ProductID
	}
	return ""
}

func (x *SendPropertyReq) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *SendPropertyReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SendPropertyReq) GetDataTimestamp() int64 {
	if x != nil {
		return x.DataTimestamp
	}
	return 0
}

func (x *SendPropertyReq) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type SendPropertyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`              //设备返回状态码
	Status      string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`           //返回状态
	ClientToken string `protobuf:"bytes,3,opt,name=clientToken,proto3" json:"clientToken,omitempty"` //调用id
	Data        string `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`               //返回信息
}

func (x *SendPropertyResp) Reset() {
	*x = SendPropertyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPropertyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPropertyResp) ProtoMessage() {}

func (x *SendPropertyResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPropertyResp.ProtoReflect.Descriptor instead.
func (*SendPropertyResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{18}
}

func (x *SendPropertyResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendPropertyResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendPropertyResp) GetClientToken() string {
	if x != nil {
		return x.ClientToken
	}
	return ""
}

func (x *SendPropertyResp) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic   string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`     //发送的topic
	Payload []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"` //发送的数据
}

func (x *SendMsgReq) Reset() {
	*x = SendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgReq) ProtoMessage() {}

func (x *SendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgReq.ProtoReflect.Descriptor instead.
func (*SendMsgReq) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{19}
}

func (x *SendMsgReq) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *SendMsgReq) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type SendMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SendMsgResp) Reset() {
	*x = SendMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_di_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsgResp) ProtoMessage() {}

func (x *SendMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_di_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsgResp.ProtoReflect.Descriptor instead.
func (*SendMsgResp) Descriptor() ([]byte, []int) {
	return file_proto_di_proto_rawDescGZIP(), []int{20}
}

var File_proto_di_proto protoreflect.FileDescriptor

var file_proto_di_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x64, 0x69, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x32, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x22, 0xa7, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72,
	0x67, 0x46, 0x75, 0x6e, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x67,
	0x46, 0x75, 0x6e, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x70,
	0x0a, 0x16, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x73,
	0x22, 0x5b, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x50, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xda, 0x01, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x6e, 0x0a, 0x0a,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x0e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x64, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x92, 0x02, 0x0a, 0x0e, 0x48, 0x75, 0x62,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e,
	0x64, 0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x64, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x22, 0x4c, 0x0a,
	0x0f, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x2e, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcd, 0x01, 0x0a, 0x0b,
	0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x0e,
	0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x45, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x20, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x64, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x4c, 0x0a, 0x0f, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x69, 0x2e, 0x53,
	0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x61, 0x0a, 0x0b, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x8b, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x74, 0x0a, 0x10, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x32, 0xc4, 0x02,
	0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0b, 0x73,
	0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x2e, 0x64, 0x69, 0x2e,
	0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x64, 0x69, 0x2e, 0x53, 0x64, 0x6b, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x68, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x12, 0x2e, 0x64, 0x69, 0x2e, 0x48, 0x75, 0x62, 0x4c, 0x6f, 0x67, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x64, 0x69, 0x2e, 0x48, 0x75, 0x62, 0x4c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x13, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x2e, 0x64, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x15,
	0x2e, 0x64, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e, 0x64, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x1a, 0x15, 0x2e, 0x64, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0d, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x2e, 0x64, 0x69, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x64, 0x69, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x32, 0xac, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x11, 0x2e, 0x64, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x64, 0x69, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c,
	0x73, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x13, 0x2e, 0x64,
	0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x64, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x4d,
	0x73, 0x67, 0x12, 0x0e, 0x2e, 0x64, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x64, 0x69, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x42, 0x07, 0x5a, 0x05, 0x70, 0x62, 0x2f, 0x64, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_di_proto_rawDescOnce sync.Once
	file_proto_di_proto_rawDescData = file_proto_di_proto_rawDesc
)

func file_proto_di_proto_rawDescGZIP() []byte {
	file_proto_di_proto_rawDescOnce.Do(func() {
		file_proto_di_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_di_proto_rawDescData)
	})
	return file_proto_di_proto_rawDescData
}

var file_proto_di_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_di_proto_goTypes = []interface{}{
	(*Response)(nil),               // 0: di.Response
	(*PageInfo)(nil),               // 1: di.PageInfo
	(*PropertyLogIndexReq)(nil),    // 2: di.PropertyLogIndexReq
	(*PropertyLatestIndexReq)(nil), // 3: di.PropertyLatestIndexReq
	(*PropertyIndex)(nil),          // 4: di.PropertyIndex
	(*PropertyIndexResp)(nil),      // 5: di.PropertyIndexResp
	(*EventLogIndexReq)(nil),       // 6: di.EventLogIndexReq
	(*EventIndex)(nil),             // 7: di.EventIndex
	(*EventIndexResp)(nil),         // 8: di.EventIndexResp
	(*HubLogIndexReq)(nil),         // 9: di.HubLogIndexReq
	(*HubLogIndexResp)(nil),        // 10: di.HubLogIndexResp
	(*HubLogIndex)(nil),            // 11: di.HubLogIndex
	(*SdkLogIndexReq)(nil),         // 12: di.SdkLogIndexReq
	(*SdkLogIndexResp)(nil),        // 13: di.SdkLogIndexResp
	(*SdkLogIndex)(nil),            // 14: di.SdkLogIndex
	(*SendActionReq)(nil),          // 15: di.SendActionReq
	(*SendActionResp)(nil),         // 16: di.SendActionResp
	(*SendPropertyReq)(nil),        // 17: di.SendPropertyReq
	(*SendPropertyResp)(nil),       // 18: di.SendPropertyResp
	(*SendMsgReq)(nil),             // 19: di.SendMsgReq
	(*SendMsgResp)(nil),            // 20: di.SendMsgResp
}
var file_proto_di_proto_depIdxs = []int32{
	1,  // 0: di.PropertyLogIndexReq.page:type_name -> di.PageInfo
	4,  // 1: di.PropertyIndexResp.list:type_name -> di.PropertyIndex
	1,  // 2: di.EventLogIndexReq.page:type_name -> di.PageInfo
	7,  // 3: di.EventIndexResp.list:type_name -> di.EventIndex
	1,  // 4: di.HubLogIndexReq.page:type_name -> di.PageInfo
	11, // 5: di.HubLogIndexResp.list:type_name -> di.HubLogIndex
	1,  // 6: di.SdkLogIndexReq.page:type_name -> di.PageInfo
	14, // 7: di.SdkLogIndexResp.list:type_name -> di.SdkLogIndex
	12, // 8: di.DeviceMsg.sdkLogIndex:input_type -> di.SdkLogIndexReq
	9,  // 9: di.DeviceMsg.hubLogIndex:input_type -> di.HubLogIndexReq
	3,  // 10: di.DeviceMsg.propertyLatestIndex:input_type -> di.PropertyLatestIndexReq
	2,  // 11: di.DeviceMsg.propertyLogIndex:input_type -> di.PropertyLogIndexReq
	6,  // 12: di.DeviceMsg.eventLogIndex:input_type -> di.EventLogIndexReq
	15, // 13: di.DeviceInteract.sendAction:input_type -> di.SendActionReq
	17, // 14: di.DeviceInteract.sendProperty:input_type -> di.SendPropertyReq
	19, // 15: di.DeviceInteract.sendMsg:input_type -> di.SendMsgReq
	13, // 16: di.DeviceMsg.sdkLogIndex:output_type -> di.SdkLogIndexResp
	10, // 17: di.DeviceMsg.hubLogIndex:output_type -> di.HubLogIndexResp
	5,  // 18: di.DeviceMsg.propertyLatestIndex:output_type -> di.PropertyIndexResp
	5,  // 19: di.DeviceMsg.propertyLogIndex:output_type -> di.PropertyIndexResp
	8,  // 20: di.DeviceMsg.eventLogIndex:output_type -> di.EventIndexResp
	16, // 21: di.DeviceInteract.sendAction:output_type -> di.SendActionResp
	18, // 22: di.DeviceInteract.sendProperty:output_type -> di.SendPropertyResp
	20, // 23: di.DeviceInteract.sendMsg:output_type -> di.SendMsgResp
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_di_proto_init() }
func file_proto_di_proto_init() {
	if File_proto_di_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_di_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyLatestIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropertyIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HubLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HubLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HubLogIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkLogIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkLogIndexResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SdkLogIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendActionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPropertyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_di_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_di_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_di_proto_goTypes,
		DependencyIndexes: file_proto_di_proto_depIdxs,
		MessageInfos:      file_proto_di_proto_msgTypes,
	}.Build()
	File_proto_di_proto = out.File
	file_proto_di_proto_rawDesc = nil
	file_proto_di_proto_goTypes = nil
	file_proto_di_proto_depIdxs = nil
}
